"""
Autogenerated input type of AddTodo
"""
input AddTodoInput {
  clientMutationId: String
  text: String!
  userId: CustomId!
}

"""
Autogenerated return type of AddTodo
"""
type AddTodoPayload {
  clientMutationId: String
  todoEdge: TodoEdge!
  user: User!
}

"""
Autogenerated input type of ChangeTodoStatus
"""
input ChangeTodoStatusInput {
  clientMutationId: String
  complete: Boolean!
  id: CustomId!
  userId: CustomId!
}

"""
Autogenerated return type of ChangeTodoStatus
"""
type ChangeTodoStatusPayload {
  clientMutationId: String
  todo: Todo!
  user: User!
}

"""
Represents a unique identifier that is Base64 obfuscated. It is often used to
refetch an object or as key for a cache. The ID type appears in a JSON response
as a String; however, it is not intended to be human-readable. When expected as
an input type, any string (such as `"VXNlci0xMA=="`) or integer (such as `4`)
input value will be accepted as an ID.
"""
scalar CustomId

"""
Autogenerated input type of MarkAllTodos
"""
input MarkAllTodosInput {
  clientMutationId: String
  complete: Boolean!
  userId: CustomId!
}

"""
Autogenerated return type of MarkAllTodos
"""
type MarkAllTodosPayload {
  changedTodos: [Todo!]!
  clientMutationId: String
  user: User!
}

type Mutation {
  addTodo(
    """
    Parameters for AddTodo
    """
    input: AddTodoInput!
  ): AddTodoPayload
  changeTodoStatus(
    """
    Parameters for ChangeTodoStatus
    """
    input: ChangeTodoStatusInput!
  ): ChangeTodoStatusPayload
  markAllTodos(
    """
    Parameters for MarkAllTodos
    """
    input: MarkAllTodosInput!
  ): MarkAllTodosPayload
  removeCompletedTodos(
    """
    Parameters for RemoveCompletedTodos
    """
    input: RemoveCompletedTodosInput!
  ): RemoveCompletedTodosPayload
  removeTodo(
    """
    Parameters for RemoveTodo
    """
    input: RemoveTodoInput!
  ): RemoveTodoPayload
  renameTodo(
    """
    Parameters for RenameTodo
    """
    input: RenameTodoInput!
  ): RenameTodoPayload
}

interface Node {
  id: CustomId!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Query {
  node(id: CustomId!): Node
  user(id: String): User
}

"""
Autogenerated input type of RemoveCompletedTodos
"""
input RemoveCompletedTodosInput {
  clientMutationId: String
  userId: CustomId!
}

"""
Autogenerated return type of RemoveCompletedTodos
"""
type RemoveCompletedTodosPayload {
  clientMutationId: String
  deletedTodoIds: [String!]
  user: User!
}

"""
Autogenerated input type of RemoveTodo
"""
input RemoveTodoInput {
  clientMutationId: String
  id: CustomId!
  userId: CustomId!
}

"""
Autogenerated return type of RemoveTodo
"""
type RemoveTodoPayload {
  clientMutationId: String
  deletedTodoId: CustomId!
  user: User!
}

"""
Autogenerated input type of RenameTodo
"""
input RenameTodoInput {
  clientMutationId: String
  id: CustomId!
  text: String!
}

"""
Autogenerated return type of RenameTodo
"""
type RenameTodoPayload {
  clientMutationId: String
  todo: Todo!
}

type Todo implements Node {
  complete: Boolean!
  id: CustomId!
  text: String!
}

"""
The connection type for Todo.
"""
type TodoConnection {
  """
  A list of edges.
  """
  edges: [TodoEdge]

  """
  A list of nodes.
  """
  nodes: [Todo]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type TodoEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Todo
}

type User implements Node {
  completedCount: Int!
  id: CustomId!
  todos(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    status: String! = "any"
  ): TodoConnection
  totalCount: Int!
  userId: String!
}
